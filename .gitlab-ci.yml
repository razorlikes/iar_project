stages:
  - dependencies
  - test
  - analyze
  - build
  - deploy

install_dependencies_backend:
  image: node:16-alpine
  stage: dependencies
  script:
    - cd backend
    - npm install
  only:
    refs:
      - main
    changes:
      - backend/*
  cache:
    key:
      files:
        - backend/package-lock.json
    paths:
      - backend/node_modules

unit_test_backend:
  image: node:16-alpine
  stage: test
  needs:
    - install_dependencies_backend
  script:
    - cd backend
    - npm run coverage
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit:
        - ./backend/results/test-junit.xml
      coverage_report:
        coverage_format: cobertura
        path: ./backend/coverage/cobertura-coverage.xml
  cache:
    key:
      files:
        - backend/package-lock.json
    paths:
      - backend/node_modules
    policy: pull

deploy_backend:
  stage: deploy
  image: alpine
  needs:
    - unit_test_backend
  script:
    - ls backend

install_dependencies_frontend:
  image: node:16-alpine
  stage: dependencies
  script:
    - cd frontend
    - npm install
  only:
    refs:
      - main
    changes:
      - frontend/*
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/node_modules

lint_frontend:
  image: node:16-alpine
  stage: test
  needs:
    - install_dependencies_frontend
  dependencies:
    - install_dependencies_frontend
  script:
    - cd frontend
    - npm link @angular/cli@13.3.2
    - ng lint
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/node_modules
    policy: pull

#.test_frontend:
#  image: container.docker.inf.h-brs.de/diarchitect/docker-node-chrome-firefox:master
#  stage: test
#  needs:
#    - install_dependencies_frontend
#  script:
#    - cd frontend
#    - npm link @angular/cli@13.3.2
#    - npm test -- --browsers=ChromeHeadlessNoSandbox,FirefoxHeadless --watch=false
#  artifacts:
#    when: always
#    expire_in: 1 week
#    reports:
#      junit:
#        - "./frontend/reports/chrome.xml"
#        - "./frontend/reports/firefox.xml"
#      coverage_report:
#        coverage_format: cobertura
#        path: ./frontend/coverage/app/cobertura-coverage.xml
#  cache:
#    key:
#      files:
#        - frontend/package-lock.json
#    paths:
#      - frontend/node_modules
#    policy: pull

build_frontend:
  image: node:16-alpine
  stage: build
  needs:
    - install_dependencies_frontend
    - lint_frontend
  dependencies:
    - install_dependencies_frontend
  script:
    - cd frontend
    - npm link @angular/cli@13.3.2
    - npm run build
  after_script:
    - echo "JOB_ID=$CI_JOB_ID" >> job.env
  artifacts:
    paths:
      - $CI_PROJECT_DIR/frontend/dist
    reports:
      dotenv: job.env
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/node_modules
    policy: pull

deploy_frontend:
  image: alpine
  stage: deploy
  needs:
    - build_frontend
  variables:
    BUILD_JOB_ID: JOB_ID
    ARTIFACT_URL: "https://git.inf.h-brs.de/api/v4/projects/$CI_PROJECT_ID/jobs/$JOB_ID/artifacts?job_token=$CI_JOB_TOKEN"
  script:
    - ls frontend
