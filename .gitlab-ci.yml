stages:
  - dependencies
  - test
  - build
  - deploy

variables:
  ANGULAR_CLI_VERSION: 13.3.9

.backend_rules:
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      changes:
        - backend/**/*
        - .gitlab-ci.yml

.frontend_rules:
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      changes:
        - frontend/**/*
        - .gitlab-ci.yml

install-dependencies:backend:
  image: node:16-alpine
  stage: dependencies
  script:
    - cd backend
    - npm install
  rules:
    - !reference [.backend_rules, rules]
  cache:
    key:
      files:
        - backend/package-lock.json
    paths:
      - backend/node_modules

unit-test:backend:
  image: node:16-alpine
  stage: test
  rules:
    - !reference [ .backend_rules, rules ]
  needs:
    - install-dependencies:backend
  script:
    - cd backend
    - npm run coverage
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit:
        - ./backend/results/test-junit.xml
      coverage_report:
        coverage_format: cobertura
        path: ./backend/coverage/cobertura-coverage.xml
  cache:
    key:
      files:
        - backend/package-lock.json
    paths:
      - backend/node_modules
    policy: pull

deploy:backend:
  stage: deploy
  image: alpine
  rules:
    - !reference [ .backend_rules, rules ]
  needs:
    - unit-test:backend
  script:
    - ls backend

install-dependencies:frontend:
  image: node:16-alpine
  stage: dependencies
  script:
    - cd frontend
    - npm install
  rules:
    - !reference [ .frontend_rules, rules ]
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/node_modules

lint:frontend:
  image: node:16-alpine
  stage: test
  rules:
    - !reference [ .frontend_rules, rules ]
  needs:
    - install-dependencies:frontend
  script:
    - cd frontend
    - npm link @angular/cli@$ANGULAR_CLI_VERSION
    - ng lint
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/node_modules
    policy: pull

.test:frontend:
  image: container.docker.inf.h-brs.de/diarchitect/docker-node-chrome-firefox:master
  stage: test
  needs:
    - install-dependencies:frontend
  rules:
    - !reference [ .frontend_rules, rules ]
  script:
    - cd frontend
    - npm link @angular/cli@$ANGULAR_CLI_VERSION
    - npm test -- --browsers=ChromeHeadlessNoSandbox,FirefoxHeadless --watch=false
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit:
        - "./frontend/reports/chrome.xml"
        - "./frontend/reports/firefox.xml"
      coverage_report:
        coverage_format: cobertura
        path: ./frontend/coverage/app/cobertura-coverage.xml
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/node_modules
    policy: pull

build:frontend:
  image: node:16-alpine
  stage: build
  rules:
    - !reference [ .frontend_rules, rules ]
  needs:
    - lint:frontend
    #- test:frontend
  script:
    - cd frontend
    - npm link @angular/cli@$ANGULAR_CLI_VERSION
    - npm run build
  after_script:
    - echo "JOB_ID=$CI_JOB_ID" >> job.env
  artifacts:
    paths:
      - $CI_PROJECT_DIR/frontend/dist
    reports:
      dotenv: job.env
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/node_modules
    policy: pull

deploy:frontend:
  image: alpine
  stage: deploy
  rules:
    - !reference [ .frontend_rules, rules ]
  needs:
    - build:frontend
  variables:
    BUILD_JOB_ID: JOB_ID
    ARTIFACT_URL: "https://git.inf.h-brs.de/api/v4/projects/$CI_PROJECT_ID/jobs/$JOB_ID/artifacts?job_token=$CI_JOB_TOKEN"
  script:
    - ls frontend
